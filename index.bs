<pre class='metadata'>
Title: Architecture Decentralized Digital Heritage Network
Shortname: architecture
Level: 1
Status: LS
URL: https://github.com/ErfgoedPod/architecture
Editor: Miel Vander Sande, [meemoo](https://meemoo.be), miel.vandersande@meemoo.be
Abstract: This specification gives a high-level overview of a decentralized digital heritage network using principles from Solid and the Researcher Pod project.
Markup Shorthands: markdown yes
</pre>

<style>
table {
  margin: 25px auto;
  border-collapse: collapse;
  border: 1px solid #eee;
  border-bottom: 2px solid #005A9C;
}
table tr:hover {
  background: #f4f4f4;
}
table tr:hover td {
  color: #555;
}
table th, table td {
  color: #999;
  border: 1px solid #eee;
  padding: 12px 12px;
  border-collapse: collapse;
}
table th {
  background: #005A9C;
  color: #fff;
}
table th.last {
  border-right: none;
}
</style>

# Set of documents

This document is one of the *Decentralized Digital Heritage Network* specifications produced by the ErfgoedPod project by [Netwerk Digitaal Erfgoed](https://netwerkdigitaalerfgoed.nl), [meemoo - Flemish Institute for Archives](https://meemoo.be) and [Ghent University - IDLab](http://idlab.ugent.be):

1. [Decentralized Digital Heritage Network architecture](/architecture/) (this document)
2. [Use cases & Business processes](/usecases/)
3. [Common infrastructure in Cultural Heritage Institutions](/common-setups/)

This project also contributes to the following companion specifications of the [ResearcherPod](https://knows.idlab.ugent.be/projects/mellon) project:

1. [Orchestrator](https://mellonscholarlycommunication.github.io/spec-orchestrator/) 
2. [Data Pod](https://mellonscholarlycommunication.github.io/spec-datapod/)
3. [Rule language](https://mellonscholarlycommunication.github.io/spec-rulelanguage/)
4. [Artefact Lifecycle Event Log](https://mellonscholarlycommunication.github.io/spec-eventlog/)

Introduction {#introduction}
============================

The *Decentralized Digital Heritage Network* is a protocol and a set of best practices to establish a sustainable exchange network of digital heritage data between cultural heritage institutions and their services.  
It is an application of the [generic ResearcherPod boilerplate architecture](https://github.com/mellonscholarlycommunication) for decentralized Web networks based on the [[solid-protocol]] and [[!ACTIVITYSTREAMS-VOCABULARY]].
This document lays out the high-level concepts and design of Decentralized Digital Heritage Network.

Overview {#overview}
======================

The decentralized digital heritage network



Issue: create diagram when more is known about the components on mellon side

Actors {#actors}
================

A Decentralized Digital Heritage Network consists of multiple parties that actively participate in the exchange.
Such party is henceforth considered a network <dfn export>actor</dfn>.

All [=actors=] operate under the same protocol, but can differ in purpose.
Every actor in a decentralized digital heritage network is therefore one of the following types:

:: <dfn export>Cultural Heritage Institution</dfn>
: an individual or organisation producing and sharing digital heritage data;
:: <dfn export>Service provider</dfn>
: an organisation consuming and processing digital heritage data to provide a service to other actors in the network;
:: <dfn export>Service portal</dfn>
: an organisation consuming digital heritage data to provide a service to end-users.


Artefacts {#artefacts}
=================

A <dfn export>Digital Heritage Artefact</dfn> is a unit digital heritage data that is the object of exchange between actors.
We distinguish the following types of artefacts:

:: <dfn export>dataset</dfn>
: The description of a collection of data as defined in [[requirements-datasets#dataset]].
:: <dfn export>datasets description</dfn>
: Metadata that publishers should provide about their dataset aligned with the machine-readable publication model described in [[requirements-datasets]].
:: <dfn export>actor profile</dfn>
: A description of an actor that is a member of the network. Often, this is about the organisation acting as [=cultural heritage institution=], [=service provider=], or [=service portal=]. It is used as part of a registration or identification proces.

All artefacts have a lifecycle that consists of a sequence of [=lifecycle events=].
A <dfn export>Lifecycle Event</dfn> is a documented activity that reflect changes to the artefact's presence or positioning on the network.
The occurence of such event can render the artefact eligable for certain services or exchanges. 
For instance, a dataset (= artefact) can only be archived by an archiving service once its registered (= lifecycle event).

<pre class='include'>
path: images/lifecycle.svg
</pre>

We distinguish the following types of lifecycle events:
- `create`: the artefact is created
- `destroy`: the artefact is no longer available
- `update`: a new version of the artefact is available
- `store`: the artefact was stored in a [=Digital Heritage Pod=]
- `announce`: the artefact was promoted over the network
- `register`: a registry (service provider) added the artefact to its service
- `preserve`: an archive (service provider) stored the artefact for long-term preservation 
- `index`: a repository indexed the artefact for search
- `enrich`: the artefact's metadata was enriched
- `link`: a link was added to or from the artefact

Issue: complete the list of lifecycle events.

Components {#components}
========================

## Digital Heritage Pod {#pod}

The <dfn export>Digital Heritage Pod</dfn> is a [=Cultural Heritage Institution=]'s main exchange hub for sharing digital heritage information with external [=service provider=] and other [=cultural heritage institutions=].
By design, the [=Digital Heritage Pod=] is a passive component: it can respond to requests for the [=digital heritage artefacts=] it stores, 
but cannot start an interaction with other [=actors=] (see the additional components layed out in [[#participate]] for active participation).  

The Digital Heritage Pod's core fundament is a Solid Data Pod [[solid-protocol#data-pod]] consisting of:
- a <dfn export>datastore</dfn> to store [=digital heritage artefacts=] such as datasets, datasets descriptions, or profiles of organisations;
- a [Web Access Control (WAC) mechanism](https://solid.github.io/specification/protocol#web-access-control) to manage read-write access data pod resources;
- a [Linked Data Notification (LDN) inbox](https://solid.github.io/specification/protocol#notifications) receive Linked Data Notifications [[!LDN]] from other actors;
- a [Linked Data Platform (LDP) subset implementation](https://solid.github.io/specification/protocol#auxiliary-resources-description-resource) to expose the datastore contents and the inbox to other actors.

The [=digital heritage artefacts=] stored in the [=datastore=] originate from two data management systems at the [=cultural heritage institution=]:

- a [Digital Asset Management System](/common-setups#): Software used by the cultural heritage institution to organize, control, and manage collections objects by "tracking all information related to and about" those objects.
- a [Collections Management System](/common-setups#): A centralized system where cultural heritage institutions (efficiently) store, organize, manage, access and distribute their media assets.

Finally, the pod exposes a <dfn export>Artefact Lifecycle Event Log</dfn>: a resource containing an immutable log that records all lifecycle events related to artefacts known to the pod.

<pre class='include'>
path: images/erfgoedpod-Erfgoedpod.svg
</pre>



## Digital Heritage Service Hub ## {#hubs}

A <dfn export>Digital Heritage Service Hub</dfn> is a [=service provider=]'s exchange hub to make its services available to other network actors such as [=cultural heritage institutions=] or [=service portals=].
It consists of some of the same interface components as the [=Digital Heritage Pod=]:

- a [Linked Data Notification (LDN) inbox](https://solid.github.io/specification/protocol#notifications) receive Linked Data Notifications [[!LDN]] from other actors;
- a [Linked Data Platform (LDP) subset implementation](https://solid.github.io/specification/protocol#auxiliary-resources-description-resource) to expose the inbox to other actors;
- an [=Artefact Lifecycle Event Log=] resource that publishes and records all lifecycle events related to artefacts processed by the service provider. 

In contrast to the [=Digital Heritage Pod=], it is unspecified what other subcomponents a service hub should provide. Processes that store data, provide security or execute the services are considered a black box.

<pre class='include'>
path: images/erfgoedpod-ServiceHub.svg
</pre>

## Participating in a decentralized Digital Heritage Network {#participate}

To actively participate in the network, 
[=actors=] require a few components that enable them to interact with other [=actors=].
For [=cultural heritage institutions=]), 
these components commonly complement a [=digital heritage pod=] or [=Digital Heritage Service Hub=].  

Interations between [=actors=] are always about a [=digital heritage artefact=] and result in a [=lifecycle event=] of that artefact.

- a [Policy](/orchestrator#policy): set of rules that dictates what actions need to be taken when a [=lifecycle event=] occurs. These originate from the digital heritage network participation agreement, possibly amended with procedures imposed by the institution, the discipline, or personal preference.
- an [Orchestrator](/orchestrator#orchestrator): an autonomeous that watches the [=digital heritage pod=] or [=Digital Heritage Service Hub=]'s inbox, and can interpret and execute the [policy](/orchestrator#policy).
- a [Dashboard](/orchestrator#dashboard): a user interface for users to interact with the contents of the [=digital heritage pod=].

<pre class='include'>
path: images/erfgoedpod-BasicSetup.svg
</pre>

## Collection information from a decentralized Digital Heritage Network

Actors retrieve two types of information from the network:

- lifecycle information: given an object, what actions has it been involved in? eg. added to register X, indexed by Y, or archived by Z.
- descriptive information: given descriptive information, what objects match this description? eg. what Pods have works from Peter Paul Rubens

: Query index  
:: An index that allows for fine-grained search into the contents of the files stored in the Data Pod. 
: Collector    
:: Agent that queries or craws the decentralized network for distributed information targeted by a certain query that needs solving. 
: Filters      
:: Description of the information that needs to be collected.

<pre class=include>
path: images/erfgoedpod-Collector.svg
</pre>


Technical aspects
==========================
## WebID

Simple universal identification mechanism for the Web and a core aspect of Solid. Used in ErfgoedPod to identify acting organisations in the network (eg. a Cultural Heritage Institution, a Registry, ...) 

Example: http://kb.nl#me

## Linked Data Notifications (LDN)

Communication protocol between two actors in the network. Defines an inbox to receive an [[LDN]]. An inbox can be discovered thorugh a `Link` header when requesting a resource, like the WebID. 

Example:

``` http
POST /inbox HTTP/1.1
Host: registry.nde.nl
Content-Type: application/ld+json;profile="https://www.w3.org/ns/activitystreams"
Content-Language: en

{
  "@context": "https://www.w3.org/ns/activitystreams",
  "summary": "KB created dataset.ttl",
  "type": "Create",
  "actor": "http://kb.nl#me",
  "object": "created pod.kb.nl/dataset.ttl"
}

```

## Eventlog

The eventlog is a mandatory log stored in each Pod or Service Hub (eg. Registry) that participates in the network. Lifecycle events of datasets (and other artefacts) are stored there.

Example:

pod.kb.nl/eventlog

```
@prefix lode: <http://linkedevents.org/ontology/>.
@prefix time: <http://www.w3.org/2006/time#>.

_:1 a lode:Event;
    lode:atTime [ 
        a time:Instant; 
        time:inXSDDateTimeStamp  2020-04-12T10:30:00+10:00 . 
    ];
    lode:involvedAgent <http://kb.nl#me>;
    dc:description "Created pod.kb.nl/dataset.ttl".

...
```

``` 
[2020-04-12T10:30:00+10:00] Created pod.kb.nl/dataset.ttl
[2020-04-12T11:30:00+10:00] Created pod.kb.nl/dataset-desc.ttl
[2020-04-12T12:30:00+10:00] Requested registration: pod.kb.nl/dataset.ttl with registry.nde.nl
[2020-04-12T13:30:00+10:00] registry.nde.nl registered pod.kb.nl/dataset.ttl
```

### Rulebook

A rulebook is a configuration file with machine-readable business rules and is the driver for the Orchestrator component. It dictates what actions the Orchestrator should take when it is notified of an event (typically by an incoming Linked Data Notification).

<pre class=biblio>
{
	"solid-oidc": {
		"authors": [
			"Aaron Coburn (Inrupt)",
			"elf Pavlik",
			"Dmitri Zagidulin" 
		],
		"href": "https://solid.github.io/authentication-panel/solid-oidc/",
		"title": "SOLID-OIDC",
		"status": "Editor’s Draft",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"solid-protocol": {
		"authors": [
			"Sarven Capadisli",
			"Tim Berners-Lee",
			"Ruben Verborgh",
			"Kjetil Kjernsmo",
			"Justin Bingham",
			"Dmitri Zagidulin"
		],
		"href": "https://solidproject.org/TR/protocol/",
		"title": "The Solid Protocol",
		"status": "Editor’s Draft",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"requirements-datasets": {
		"authors": [
			"David de Boer",
			"Bob Coret"
		],
		"href": "https://netwerk-digitaal-erfgoed.github.io/requirements-datasets",
		"title": "Requirements for Datasets",
		"status": "Living Standard",
		"publisher": "Netwerk Digitaal Erfgoed",
		"deliveredBy": [
			"https://netwerkdigitaalerfgoed.nl"
		]
	}
}
</pre>