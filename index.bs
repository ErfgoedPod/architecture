<pre class='metadata'>
Title: Architecture Decentralized Digital Heritage Network
Shortname: architecture
Level: 1
Status: LS
URL: https://github.com/ErfgoedPod/architecture
Editor: Miel Vander Sande, meemoo http://meemoo.be, miel.vandersande@meemoo.be
Abstract: This specification gives a high-level overview of a decentralized digital heritage network using principles from Solid and the Researcher Pod project.
Markup Shorthands: markdown yes
</pre>

# Set of documents

This document is one of the *Decentralized Digital Heritage Network* specifications produced by the ErfgoedPod project by [Netwerk Digitaal Erfgoed](https://netwerkdigitaalerfgoed.nl), [meemoo - Flemish Institute for Archiving](https://meemoo.be) and [Ghent University - IDLab](http://idlab.ugent.be):

1. [Decentralized Digital Heritage Network architecture](/architecture/) (this document)
2. [Use cases & Business processes](/usecases/)
3. [Common infrastructure in Cultural Heritage Institutions](/common-setups/)

This project also contributes to the following companion specifications of the [ResearcherPod](https://mellonscholarlycommunication.github.io/spec-overview) project:

1. [Orchestrator](https://mellonscholarlycommunication.github.io/spec-orchestrator/) 
2. [Data Pod](https://mellonscholarlycommunication.github.io/spec-datapod/)
3. [Rule language](https://mellonscholarlycommunication.github.io/spec-rulelanguage/)
4. [Artefact Lifecycle Event Log](https://mellonscholarlycommunication.github.io/spec-eventlog/)

Introduction {#introduction}
============================

The *Decentralized Digital Heritage Network* is a protocol and a set of best practices to establish a sustainable exchange network of digital heritage data between cultural heritage institutions and their services.  
It is an application of the [generic ResearcherPod boilerplate architecture](https://github.com/mellonscholarlycommunication) for decentralized Web networks using the [[solid-protocol]] and [[!ACTIVITYSTREAMS-VOCABULARY]].
This document lays out the high-level concepts and design of Decentralized Digital Heritage Network.

Overview {#overview}
======================

Issue: create diagram when more is known about the components on mellon side

Actors {#actors}
================

A Decentralized Digital Heritage Network consists of multiple parties that actively participate in the exchange.
Such party is henceforth considered a network <dfn export>actor</dfn>.

All actors operate under the same protocol, but can differ in purpose.

We distinguish the following types of actors:

- a <dfn export>Cultural Heritage Institution</dfn>: an individual or organisation producing and sharing digital heritage data;
- a <dfn export>Digital Heritage Service provider</dfn>: an organisation consuming and processing digital heritage data to provide a service.

Artefacts {#artefacts}
=================

A <dfn export>Digital Heritage Artefact</dfn> is a unit digital heritage data that is the object of exchange between actors.

We distinguish the following types of artefacts:
- a <dfn export>dataset</dfn>
- a <dfn export>datasets description</dfn>
- an <dfn export>organisation profile</dfn>

Issue: complete the list of artefact types.

All artefacts have a lifecycle that consists of a sequence of [=lifecycle events=].
A <dfn export>Lifecycle Event</dfn> is a documented activity that reflect changes to the artefact's presence or positioning on the network.
The occurence of such event can render the artefact eligable for certain services or exchanges. 
For instance, a dataset (= artefact) can only be archived by an archiving service once its registered (= lifecycle event).

We distinguish the following types of lifecycle events:
- `create`
- `destroy`
- `update`
- `store`
- `announce`
- `register`
- `preserve`
- `index`
- `enrich`
- `link`

Issue: complete the list of lifecycle events.

Components {#components}
========================

## Digital Heritage Pod {#pod}

The <dfn export>Digital Heritage Pod</dfn> is a [=Cultural Heritage Institution=]'s main exchange hub for sharing digital heritage information with external [=digital heritage service provider=] and other [=cultural heritage institutions=].
By design, the [=Digital Heritage Pod=] is a passive component: it can respond to requests for the [=digital heritage artefacts=] it stores, 
but cannot start an interaction with other [=actors=] (see the additional components layed out in [[#participate]] for active participation).  

The Digital Heritage Pod's core fundament is a Solid Data Pod [[solid-protocol#data-pod]] consisting of:
- a <dfn export>datastore</dfn> to store [=digital heritage artefacts=] such as datasets, datasets descriptions, or profiles of organisations;
- a [Web Access Control (WAC) mechanism](https://solid.github.io/specification/protocol#web-access-control) to manage read-write access data pod resources;
- a [Linked Data Notification (LDN) inbox](https://solid.github.io/specification/protocol#notifications) receive Linked Data Notifications [[!LDN]] from other actors;
- a [Linked Data Platform (LDP) subset implementation](https://solid.github.io/specification/protocol#auxiliary-resources-description-resource) to expose the datastore contents and the inbox to other actors.

The [=digital heritage artefacts=] stored in the [=datastore=] originate from two data management systems at the [=cultural heritage institution=]:

- a [Digital Asset Management System](/common-setups#): Software used by the cultural heritage institution to organize, control, and manage collections objects by "tracking all information related to and about" those objects.
- a [Collections Management System](/common-setups#): A centralized system where cultural heritage institutions (efficiently) store, organize, manage, access and distribute their media assets.

<pre class='include'>
path: images/erfgoedpod-Erfgoedpod.svg
</pre>

## Participating in a decentralized Digital Heritage Network {#participate}

To actively participate in the network, 
[=actors=] require a few components that enable them to interact with other [=actors=].
For [=cultural heritage institutions=]), 
these components commonly complement a [=digital heritage pod=].  

Interations between [=actors=] are always about a [=digital heritage artefact=] and result in a [=lifecycle event=] of that artefact.

- a [Policy](/orchestrator#policy): set of rules that dictates what actions need to be taken when a [=lifecycle event=] occurs. These originate from the digital heritage network participation agreement, possibly amended with procedures imposed by the institution, the discipline, or personal preference.
- an [Orchestrator](/orchestrator#orchestrator): an autonomeous that watches the [=digital heritage pod=]'s inbox, and can interpret and execute the [policy](/orchestrator#policy).
- a [Dashboard](/orchestrator#dashboard): a user interface for users to interact with the contents of the [=digital heritage pod=].

<pre class='include'>
path: images/erfgoedpod-BasicSetup.svg
</pre>

## Collection information from a decentralized Digital Heritage Network

Actors retrieve two types of information from the network:

- lifecycle information: given an object, what actions has it been involved in? eg. added to register X, indexed by Y, or archived by Z.
- descriptive information: given descriptive information, what objects match this description? eg. what Pods have works from Peter Paul Rubens

: Query index  
:: An index that allows for fine-grained search into the contents of the files stored in the Data Pod. 
: Collector    
:: Agent that queries or craws the decentralized network for distributed information targeted by a certain query that needs solving. 
: Filters      
:: Description of the information that needs to be collected.

<pre class=include>
path: images/erfgoedpod-Collector.svg
</pre>

<pre class=biblio>
{
	"solid-oidc": {
		"authors": [
			"Aaron Coburn (Inrupt)",
			"elf Pavlik",
			"Dmitri Zagidulin" 
		],
		"href": "https://solid.github.io/authentication-panel/solid-oidc/",
		"title": "SOLID-OIDC",
		"status": "Editor’s Draft",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
	"solid-protocol": {
		"authors": [
			"Sarven Capadisli",
			"Tim Berners-Lee",
			"Ruben Verborgh",
			"Kjetil Kjernsmo",
			"Justin Bingham",
			"Dmitri Zagidulin"
		],
		"href": "https://solidproject.org/TR/protocol/",
		"title": "The Solid Protocol",
		"status": "Editor’s Draft",
		"publisher": "Solid project",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	}
}
</pre>